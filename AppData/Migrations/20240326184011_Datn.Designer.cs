// <auto-generated />
using System;
using AppData.DB_Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240326184011_Datn")]
    partial class Datn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AnhSanPhamChiTiet", b =>
                {
                    b.Property<Guid>("ListAnhID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SanPhamChiTietsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ListAnhID", "SanPhamChiTietsID");

                    b.HasIndex("SanPhamChiTietsID");

                    b.ToTable("AnhSanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Entities.Models.Anh", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDan")
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Anh", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.AnhSanPham", b =>
                {
                    b.Property<Guid>("Idanh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Idanh", "IdSanPhamChiTiet");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("AnhSanPham", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.BinhLuan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DanhGiaSanPham")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IDNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDSpCt")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("DateTime");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDNguoiDung");

                    b.HasIndex("IDSpCt");

                    b.ToTable("BinhLuan", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChucVu", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.GioHang", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("IDNguoiDung");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal");

                    b.Property<Guid>("IDGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSPCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSaleCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDGioHang");

                    b.HasIndex("IDSPCT");

                    b.HasIndex("IDSaleCT");

                    b.ToTable("GioHangChiTiet", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.HoaDon", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IDHinhThucThanhToan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDVoucherChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayNhanHang")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("DateTime");

                    b.Property<string>("SDTKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal");

                    b.Property<decimal>("TienGiamGia")
                        .HasColumnType("decimal");

                    b.Property<decimal>("TienShip")
                        .HasColumnType("decimal");

                    b.Property<int>("TongSoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDHinhThucThanhToan");

                    b.HasIndex("IDNguoiDung");

                    b.HasIndex("IDVoucherChiTiet");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal");

                    b.Property<Guid>("IDHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSPCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSaleCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDHoaDon");

                    b.HasIndex("IDSPCT");

                    b.HasIndex("IDSaleCT");

                    b.ToTable("HoaDonChiTiet", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.MauSac", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenMauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("MauSac", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(225)");

                    b.Property<Guid>("IdChucVu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("DateTime");

                    b.Property<string>("PhuongXa")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QuanHuyen")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TinhThanh")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChucVu");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.Sale", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSale")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("DateTime");

                    b.Property<int>("PhanTramGiam")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Sale", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.SaleChiTiet", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSPCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSale")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDSPCT");

                    b.HasIndex("IDSale");

                    b.ToTable("SaleChiTiet", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.SanPham", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("KhoiLuong")
                        .HasColumnType("decimal");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.SanPhamChiTiet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal");

                    b.Property<Guid?>("IDMauSac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDThuongHieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiSanPham")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaSPCT")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("QrImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDMauSac");

                    b.HasIndex("IDSP");

                    b.HasIndex("IDSize");

                    b.HasIndex("IDThuongHieu");

                    b.ToTable("SanPhamChiTiet", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.Size", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SizeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.ThanhToan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(225)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("thanhtoans");
                });

            modelBuilder.Entity("AppData.Entities.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(225)");

                    b.HasKey("ID");

                    b.ToTable("ThuongHieu", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.Voucher", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DieuKienMax")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("DieuKienMin")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("GiaTriVoucher")
                        .HasColumnType("Decimal");

                    b.Property<string>("MaVoucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("DateTime");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("AppData.Entities.Models.VoucherChiTiet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDNguoiDung");

                    b.HasIndex("IDVoucher");

                    b.ToTable("VoucherChiTiet", (string)null);
                });

            modelBuilder.Entity("AnhSanPhamChiTiet", b =>
                {
                    b.HasOne("AppData.Entities.Models.Anh", null)
                        .WithMany()
                        .HasForeignKey("ListAnhID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Entities.Models.SanPhamChiTiet", null)
                        .WithMany()
                        .HasForeignKey("SanPhamChiTietsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppData.Entities.Models.AnhSanPham", b =>
                {
                    b.HasOne("AppData.Entities.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("lstAnhSanPham")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Entities.Models.Anh", "Anh")
                        .WithMany()
                        .HasForeignKey("Idanh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anh");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Entities.Models.BinhLuan", b =>
                {
                    b.HasOne("AppData.Entities.Models.NguoiDung", "NguoiDung")
                        .WithMany("BinhLuans")
                        .HasForeignKey("IDNguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.Entities.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("BinhLuan")
                        .HasForeignKey("IDSpCt")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Entities.Models.GioHang", b =>
                {
                    b.HasOne("AppData.Entities.Models.NguoiDung", "NguoiDung")
                        .WithMany("GioHang")
                        .HasForeignKey("IDNguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("AppData.Entities.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("AppData.Entities.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IDGioHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.Entities.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IDSPCT")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppData.Entities.Models.SaleChiTiet", "SaleChiTiet")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IDSaleCT")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GioHang");

                    b.Navigation("SaleChiTiet");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Entities.Models.HoaDon", b =>
                {
                    b.HasOne("AppData.Entities.Models.ThanhToan", "ThanhToan")
                        .WithMany("hoaDons")
                        .HasForeignKey("IDHinhThucThanhToan")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppData.Entities.Models.NguoiDung", "NguoiDung")
                        .WithMany("HoaDons")
                        .HasForeignKey("IDNguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.Entities.Models.VoucherChiTiet", "VoucherChiTiet")
                        .WithMany("HoaDons")
                        .HasForeignKey("IDVoucherChiTiet")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("NguoiDung");

                    b.Navigation("ThanhToan");

                    b.Navigation("VoucherChiTiet");
                });

            modelBuilder.Entity("AppData.Entities.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("AppData.Entities.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("IDHoaDon")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.Entities.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("IDSPCT")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppData.Entities.Models.SaleChiTiet", "SaleChiTiet")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("IDSaleCT")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("HoaDon");

                    b.Navigation("SaleChiTiet");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Entities.Models.NguoiDung", b =>
                {
                    b.HasOne("AppData.Entities.Models.ChucVu", "ChucVus")
                        .WithMany("NguoiDung")
                        .HasForeignKey("IdChucVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVus");
                });

            modelBuilder.Entity("AppData.Entities.Models.SaleChiTiet", b =>
                {
                    b.HasOne("AppData.Entities.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("SaleChiTiets")
                        .HasForeignKey("IDSPCT");

                    b.HasOne("AppData.Entities.Models.Sale", "Sale")
                        .WithMany("SaleChiTiets")
                        .HasForeignKey("IDSale");

                    b.Navigation("Sale");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Entities.Models.SanPhamChiTiet", b =>
                {
                    b.HasOne("AppData.Entities.Models.MauSac", "MauSac")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IDMauSac");

                    b.HasOne("AppData.Entities.Models.SanPham", "SanPham")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IDSP");

                    b.HasOne("AppData.Entities.Models.Size", "Size")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IDSize");

                    b.HasOne("AppData.Entities.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IDThuongHieu");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("Size");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("AppData.Entities.Models.VoucherChiTiet", b =>
                {
                    b.HasOne("AppData.Entities.Models.NguoiDung", "NguoiDung")
                        .WithMany("VoucherChiTiets")
                        .HasForeignKey("IDNguoiDung");

                    b.HasOne("AppData.Entities.Models.Voucher", "Voucher")
                        .WithMany("VoucherChiTiets")
                        .HasForeignKey("IDVoucher");

                    b.Navigation("NguoiDung");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("AppData.Entities.Models.ChucVu", b =>
                {
                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("AppData.Entities.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.MauSac", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.NguoiDung", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("GioHang");

                    b.Navigation("HoaDons");

                    b.Navigation("VoucherChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.Sale", b =>
                {
                    b.Navigation("SaleChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.SaleChiTiet", b =>
                {
                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.SanPham", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.SanPhamChiTiet", b =>
                {
                    b.Navigation("BinhLuan");

                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SaleChiTiets");

                    b.Navigation("lstAnhSanPham");
                });

            modelBuilder.Entity("AppData.Entities.Models.Size", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.ThanhToan", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("AppData.Entities.Models.ThuongHieu", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.Voucher", b =>
                {
                    b.Navigation("VoucherChiTiets");
                });

            modelBuilder.Entity("AppData.Entities.Models.VoucherChiTiet", b =>
                {
                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
